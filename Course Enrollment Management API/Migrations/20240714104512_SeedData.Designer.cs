// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace Course_Enrollment_Management_APi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240714104512_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Models.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72ecafc1-2f35-475c-893c-1ec5c732fecf"),
                            Credits = 3,
                            Description = "Fundamental concepts of programming",
                            Title = "Introduction to Computer Science"
                        },
                        new
                        {
                            Id = new Guid("85146c4f-7280-486e-89a1-05b7d325ef68"),
                            Credits = 4,
                            Description = "Principles of database design and management",
                            Title = "Database Management"
                        });
                });

            modelBuilder.Entity("Entities.Models.Enrollment", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("aaa7b0b7-c327-47f8-a440-c1a35440e085"),
                            CourseId = new Guid("72ecafc1-2f35-475c-893c-1ec5c732fecf"),
                            EnrollmentDate = new DateTime(2024, 7, 14, 14, 45, 12, 461, DateTimeKind.Local).AddTicks(8977)
                        },
                        new
                        {
                            StudentId = new Guid("aaa7b0b7-c327-47f8-a440-c1a35440e085"),
                            CourseId = new Guid("85146c4f-7280-486e-89a1-05b7d325ef68"),
                            EnrollmentDate = new DateTime(2024, 7, 14, 14, 45, 12, 461, DateTimeKind.Local).AddTicks(8987)
                        },
                        new
                        {
                            StudentId = new Guid("ef55f7eb-56cf-48f9-a37b-fab724f21061"),
                            CourseId = new Guid("72ecafc1-2f35-475c-893c-1ec5c732fecf"),
                            EnrollmentDate = new DateTime(2024, 7, 14, 14, 45, 12, 461, DateTimeKind.Local).AddTicks(8990)
                        });
                });

            modelBuilder.Entity("Entities.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaa7b0b7-c327-47f8-a440-c1a35440e085"),
                            EmailAddress = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("ef55f7eb-56cf-48f9-a37b-fab724f21061"),
                            EmailAddress = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("Entities.Models.Enrollment", b =>
                {
                    b.HasOne("Entities.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Entities.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("Entities.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
